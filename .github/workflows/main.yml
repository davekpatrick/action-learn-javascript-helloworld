on:
  push:
    branches:    
      - main

env:
  RELEASE_VERSION: v1.4.0
  RELEASE_VERSION_MAJOR: v1
  RELEASE_VERSION_MINOR: v1.4
  RELEASE_VERSION_PATCH: 0

jobs:
  build:
   runs-on: ubuntu-22.04
   name: Artifact build
   steps:
    - uses: actions/checkout@v3
    - name: Detach HEAD
      run: |
         git checkout --detach 
         echo "--------------------------------------------"
         git status
         echo "--------------------------------------------"
    - name: Install dependencies
      run: |
        cd node
        npm install
    - name: Install ncc 
      run: |
        cd node
        npm i -g @vercel/ncc
    - name: Compile 
      run: |
        cd node
        ncc build index.js --license licenses.txt
    - name: Create commit
      run: |
        git config user.name github-actions
        git config user.email github-actions@github.com
        echo "--------------------------------------------"
        git rm -r --force '*'
        echo "--------------------------------------------"
        git reset -- README.md
        git restore -- README.md
        git reset -- LICENSE
        git restore -- LICENSE
        git reset -- action.yml
        git restore -- action.yml
        echo "--------------------------------------------"
        git add --force node/dist/index.js
        echo "--------------------------------------------"
        git commit --message="Create action release ${{ env.RELEASE_VERSION }}"
        echo "--------------------------------------------"
        # ensure we do not have an existing release version tag
        git push origin :refs/tags/${{ env.RELEASE_VERSION }}
        echo "--------------------------------------------"
        git tag --annotate --message="Tag action release ${{ env.RELEASE_VERSION }}" ${{ env.RELEASE_VERSION }}
        git tag --force --annotate --message="Tag action release ${{ env.RELEASE_VERSION_MAJOR }}" ${{ env.RELEASE_VERSION_MAJOR }}
        git tag --force --annotate --message="Tag action release ${{ env.RELEASE_VERSION_MINOR }}" ${{ env.RELEASE_VERSION_MINOR }}
        echo "--------------------------------------------"
        git status
        echo "--------------------------------------------"
        git log -3 --oneline
        echo "--------------------------------------------"
        git push origin ${{ env.RELEASE_VERSION }}
        git push --force origin ${{ env.RELEASE_VERSION_MAJOR }}
        git push --force origin ${{ env.RELEASE_VERSION_MINOR }}
  testing:
    runs-on: ubuntu-latest
    name: Action testing
    needs: [ build ]
    steps:
      # ---------------------------------------------------
      - name: Run Hello
        id: hello
        uses: davekpatrick/action-learn-javascript-helloworld@v1
        with:
          greetingType: 'Hello'
      # Use the output from the action
      - name: Print Results
        run: echo "${{ steps.hello.outputs.greetingMessage }}"
      # ---------------------------------------------------
      - name: Run Goodbye
        id: goodbye
        uses: davekpatrick/action-learn-javascript-helloworld@v1
        with:
          greetingType: 'Goodbye'
      # Use the output from the action
      - name: Print Results
        run: echo "${{ steps.goodbye.outputs.greetingMessage }}"